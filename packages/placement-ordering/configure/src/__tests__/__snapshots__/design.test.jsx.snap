// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Placement Ordering snapshot renders all default items 1`] = `
<ConfigLayout
  settings={
    <Panel
      groups={
        Object {
          "Item Type": Object {
            "configure.choiceLabel.enabled": undefined,
            "enableImages": undefined,
            "numberedGuides": undefined,
            "orientation": undefined,
            "partialScoring": undefined,
            "placementArea": undefined,
            "removeTilesAfterPlacing": false,
          },
          "Properties": Object {
            "configure.rationale.enabled": false,
            "configure.studentInstructions.enabled": false,
            "configure.teacherInstructions.enabled": false,
            "lockChoiceOrder": undefined,
            "scoringType": false,
          },
        }
      }
      model={
        Object {
          "choiceLabel": "Choice Label goes here",
          "choices": Array [
            Object {
              "id": "c1",
              "label": "Choice 1",
            },
          ],
          "configure": Object {
            "choiceLabel": Object {
              "enabled": true,
              "label": "Choice label",
              "settings": true,
            },
            "choices": Object {
              "label": "Choices",
              "settings": true,
            },
            "enableImages": Object {
              "label": "Enable Images",
              "settings": true,
            },
            "feedback": Object {
              "settings": true,
            },
            "itemStem": Object {
              "label": "Item Stem",
              "settings": true,
            },
            "lockChoiceOrder": Object {
              "label": "Lock Choice Order",
              "settings": true,
            },
            "numberedGuides": Object {
              "label": "Numbered guides",
              "settings": true,
            },
            "orientation": Object {
              "label": "Orientation",
              "settings": true,
            },
            "partialScoring": Object {
              "label": "Partial Scoring",
              "settings": true,
            },
            "placementArea": Object {
              "label": "Placement Area",
              "settings": true,
            },
            "rationale": Object {
              "enabled": true,
              "label": "Rationale",
              "settings": false,
            },
            "removeTilesAfterPlacing": Object {
              "label": "Remove Tiles after placing",
              "settings": false,
            },
            "scoringType": Object {
              "label": "Scoring Type",
              "settings": false,
            },
            "studentInstructions": Object {
              "enabled": true,
              "label": "Student Instructions",
              "settings": false,
            },
            "targetLabel": Object {
              "label": "Target label",
              "settings": true,
            },
            "teacherInstructions": Object {
              "enabled": true,
              "label": "Teacher Instructions",
              "settings": false,
            },
          },
          "enableImages": true,
          "itemStem": "Item Stem goes here",
          "lockChoiceOrder": true,
          "numberedGuides": true,
          "orientation": "vertical",
          "partialScoring": true,
          "placementArea": true,
          "removeTilesAfterPlacing": true,
          "scoringType": "auto",
          "targetLabel": "Target Label goes here",
        }
      }
      onChange={[Function]}
    />
  }
>
  <FormSection
    label="Ordering"
  >
    <InputContainer
      label="ITEM STEM"
    >
      <EditableHtml
        markup="Item Stem goes here"
        onChange={[Function]}
      />
    </InputContainer>
  </FormSection>
  <FormSection
    label="Define Choices"
  >
    <div>
      <InputContainer
        label="CHOICE LABEL"
      >
        <EditableHtml
          markup="Choice Label goes here"
          onChange={[Function]}
        />
      </InputContainer>
      <InputContainer
        label="TARGET LABEL"
      >
        <EditableHtml
          markup="Target Label goes here"
          onChange={[Function]}
        />
      </InputContainer>
    </div>
    <InputContainer
      label="CHOICES"
    >
      <WithStyles(ChoiceEditor)
        choices={
          Array [
            Object {
              "id": "c1",
              "label": "Choice 1",
            },
          ]
        }
        disableImages={false}
        onChange={[Function]}
      />
    </InputContainer>
  </FormSection>
  <FeedbackConfig
    onChange={[Function]}
  />
</ConfigLayout>
`;

exports[`Placement Ordering snapshot renders custom items 1`] = `
<ConfigLayout
  settings={
    <Panel
      groups={
        Object {
          "Item Type": Object {
            "configure.choiceLabel.enabled": undefined,
            "enableImages": undefined,
            "numberedGuides": undefined,
            "orientation": undefined,
            "partialScoring": undefined,
            "placementArea": undefined,
            "removeTilesAfterPlacing": undefined,
          },
          "Properties": Object {
            "configure.rationale.enabled": false,
            "configure.studentInstructions.enabled": false,
            "configure.teacherInstructions.enabled": false,
            "lockChoiceOrder": undefined,
            "scoringType": false,
          },
        }
      }
      model={
        Object {
          "choiceLabel": "Choice Label goes here",
          "choices": Array [
            Object {
              "id": "c1",
              "label": "Choice 1",
            },
          ],
          "configure": Object {
            "choiceLabel": Object {
              "enabled": true,
              "label": "Choice label",
              "settings": true,
            },
            "choices": Object {
              "label": "Choices",
              "settings": true,
            },
            "enableImages": Object {
              "label": "Enable Images",
              "settings": true,
            },
            "feedback": Object {
              "settings": true,
            },
            "itemStem": Object {
              "label": "Item Stem",
              "settings": false,
            },
            "lockChoiceOrder": Object {
              "label": "Lock Choice Order",
              "settings": true,
            },
            "numberedGuides": Object {
              "label": "Numbered guides",
              "settings": true,
            },
            "orientation": Object {
              "label": "Orientation",
              "settings": true,
            },
            "partialScoring": Object {
              "label": "Partial Scoring",
              "settings": true,
            },
            "placementArea": Object {
              "label": "Placement Area",
              "settings": true,
            },
            "rationale": Object {
              "enabled": true,
              "label": "Rationale",
              "settings": false,
            },
            "removeTilesAfterPlacing": Object {
              "label": "Remove Tiles after placing",
              "settings": true,
            },
            "scoringType": Object {
              "label": "Scoring Type",
              "settings": false,
            },
            "studentInstructions": Object {
              "enabled": true,
              "label": "Student Instructions",
              "settings": false,
            },
            "targetLabel": Object {
              "label": "Target label",
              "settings": true,
            },
            "teacherInstructions": Object {
              "enabled": true,
              "label": "Teacher Instructions",
              "settings": false,
            },
          },
          "enableImages": true,
          "itemStem": "Item Stem goes here",
          "lockChoiceOrder": true,
          "numberedGuides": true,
          "orientation": "vertical",
          "partialScoring": true,
          "placementArea": true,
          "removeTilesAfterPlacing": true,
          "scoringType": "auto",
          "targetLabel": "Target Label goes here",
        }
      }
      onChange={[Function]}
    />
  }
>
  <FormSection
    label="Define Choices"
  >
    <div>
      <InputContainer
        label="CHOICE LABEL"
      >
        <EditableHtml
          markup="Choice Label goes here"
          onChange={[Function]}
        />
      </InputContainer>
      <InputContainer
        label="TARGET LABEL"
      >
        <EditableHtml
          markup="Target Label goes here"
          onChange={[Function]}
        />
      </InputContainer>
    </div>
    <InputContainer
      label="CHOICES"
    >
      <WithStyles(ChoiceEditor)
        choices={
          Array [
            Object {
              "id": "c1",
              "label": "Choice 1",
            },
          ]
        }
        disableImages={false}
        onChange={[Function]}
      />
    </InputContainer>
  </FormSection>
  <FeedbackConfig
    onChange={[Function]}
  />
</ConfigLayout>
`;
