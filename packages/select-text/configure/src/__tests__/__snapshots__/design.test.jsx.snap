// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`design snapshot renders all items except feedback 1`] = `
<ConfigLayout
  settings={
    <Panel
      configuration={
        Object {
          "correctAnswer": Object {
            "label": "Correct Answers",
            "settings": true,
          },
          "feedback": Object {
            "label": "Feedback",
            "settings": false,
          },
          "highlightChoices": Object {
            "label": "Highlight choices",
            "settings": true,
          },
          "mode": Object {
            "label": "Mode",
            "settings": true,
          },
          "partialScoring": Object {
            "label": "Allow Partial Scoring",
            "settings": false,
          },
          "prompt": Object {
            "label": "Prompt",
            "settings": true,
          },
          "rationale": Object {
            "label": "Rationale",
            "settings": true,
          },
          "scoringType": Object {
            "label": "Scoring Type",
            "settings": false,
          },
          "selectionCount": Object {
            "label": "Selection count",
            "settings": true,
          },
          "selections": Object {
            "label": "Selections Available",
            "settings": true,
          },
          "studentInstructions": Object {
            "label": "Student Instructions",
            "settings": false,
          },
          "teacherInstructions": Object {
            "label": "Teacher Instructions",
            "settings": true,
          },
          "text": Object {
            "label": "Content",
            "settings": true,
          },
          "tokens": Object {
            "label": "Tokens",
            "settings": true,
          },
        }
      }
      groups={
        Object {
          "Properties": Object {
            "promptEnabled": undefined,
            "rationaleEnabled": undefined,
            "scoringType": false,
            "studentInstructionsEnabled": false,
            "teacherInstructionsEnabled": undefined,
          },
          "Settings": Object {
            "feedbackEnabled": false,
            "highlightChoices": undefined,
            "partialScoring": false,
          },
        }
      }
      model={
        Object {
          "tokens": Array [],
        }
      }
      onChangeModel={[Function]}
    />
  }
>
  <div>
    <TextField
      label="Content"
      multiline={true}
      onChange={[Function]}
      required={false}
      select={false}
      value=""
      variant="standard"
    />
    <Component
      label="Tokens"
    >
      <WithStyles(Tokenizer)
        onChange={[Function]}
        tokens={Array []}
      />
    </Component>
    <WithStyles(Chip)
      label="Mode: None"
    />
    <WithStyles(Chip)
      label="Selections Available: 0"
    />
    <WithStyles(Chip)
      label="Correct Answers: 0"
    />
    <Component
      label="Selection count (0:any)"
      max={0}
      min={0}
      onChange={[Function]}
    />
  </div>
</ConfigLayout>
`;

exports[`design snapshot renders all items except the content input 1`] = `
<ConfigLayout
  settings={
    <Panel
      configuration={
        Object {
          "correctAnswer": Object {
            "label": "Correct Answers",
            "settings": true,
          },
          "feedback": Object {
            "label": "Feedback",
            "settings": false,
          },
          "highlightChoices": Object {
            "label": "Highlight choices",
            "settings": true,
          },
          "mode": Object {
            "label": "Mode",
            "settings": true,
          },
          "partialScoring": Object {
            "label": "Allow Partial Scoring",
            "settings": false,
          },
          "prompt": Object {
            "label": "Prompt",
            "settings": true,
          },
          "rationale": Object {
            "label": "Rationale",
            "settings": true,
          },
          "scoringType": Object {
            "label": "Scoring Type",
            "settings": false,
          },
          "selectionCount": Object {
            "label": "Selection count",
            "settings": true,
          },
          "selections": Object {
            "label": "Selections Available",
            "settings": true,
          },
          "studentInstructions": Object {
            "label": "Student Instructions",
            "settings": false,
          },
          "teacherInstructions": Object {
            "label": "Teacher Instructions",
            "settings": true,
          },
          "text": Object {
            "label": "Content",
            "settings": false,
          },
          "tokens": Object {
            "label": "Tokens",
            "settings": true,
          },
        }
      }
      groups={
        Object {
          "Properties": Object {
            "promptEnabled": undefined,
            "rationaleEnabled": undefined,
            "scoringType": false,
            "studentInstructionsEnabled": false,
            "teacherInstructionsEnabled": undefined,
          },
          "Settings": Object {
            "feedbackEnabled": false,
            "highlightChoices": undefined,
            "partialScoring": false,
          },
        }
      }
      model={
        Object {
          "tokens": Array [],
        }
      }
      onChangeModel={[Function]}
    />
  }
>
  <div>
    <Component
      label="Tokens"
    >
      <WithStyles(Tokenizer)
        onChange={[Function]}
        tokens={Array []}
      />
    </Component>
    <WithStyles(Chip)
      label="Mode: None"
    />
    <WithStyles(Chip)
      label="Selections Available: 0"
    />
    <WithStyles(Chip)
      label="Correct Answers: 0"
    />
    <Component
      label="Selection count (0:any)"
      max={0}
      min={0}
      onChange={[Function]}
    />
  </div>
</ConfigLayout>
`;

exports[`design snapshot renders all items with defaultProps 1`] = `
<ConfigLayout
  settings={
    <Panel
      configuration={
        Object {
          "correctAnswer": Object {
            "label": "Correct Answers",
            "settings": true,
          },
          "feedback": Object {
            "label": "Feedback",
            "settings": true,
          },
          "highlightChoices": Object {
            "label": "Highlight choices",
            "settings": true,
          },
          "mode": Object {
            "label": "Mode",
            "settings": true,
          },
          "partialScoring": Object {
            "label": "Allow Partial Scoring",
            "settings": false,
          },
          "prompt": Object {
            "label": "Prompt",
            "settings": true,
          },
          "rationale": Object {
            "label": "Rationale",
            "settings": true,
          },
          "scoringType": Object {
            "label": "Scoring Type",
            "settings": false,
          },
          "selectionCount": Object {
            "label": "Selection count",
            "settings": true,
          },
          "selections": Object {
            "label": "Selections Available",
            "settings": true,
          },
          "studentInstructions": Object {
            "label": "Student Instructions",
            "settings": false,
          },
          "teacherInstructions": Object {
            "label": "Teacher Instructions",
            "settings": true,
          },
          "text": Object {
            "label": "Content",
            "settings": true,
          },
          "tokens": Object {
            "label": "Tokens",
            "settings": true,
          },
        }
      }
      groups={
        Object {
          "Properties": Object {
            "promptEnabled": undefined,
            "rationaleEnabled": undefined,
            "scoringType": false,
            "studentInstructionsEnabled": false,
            "teacherInstructionsEnabled": undefined,
          },
          "Settings": Object {
            "feedbackEnabled": undefined,
            "highlightChoices": undefined,
            "partialScoring": false,
          },
        }
      }
      model={
        Object {
          "tokens": Array [],
        }
      }
      onChangeModel={[Function]}
    />
  }
>
  <div>
    <TextField
      label="Content"
      multiline={true}
      onChange={[Function]}
      required={false}
      select={false}
      value=""
      variant="standard"
    />
    <Component
      label="Tokens"
    >
      <WithStyles(Tokenizer)
        onChange={[Function]}
        tokens={Array []}
      />
    </Component>
    <WithStyles(Chip)
      label="Mode: None"
    />
    <WithStyles(Chip)
      label="Selections Available: 0"
    />
    <WithStyles(Chip)
      label="Correct Answers: 0"
    />
    <Component
      label="Selection count (0:any)"
      max={0}
      min={0}
      onChange={[Function]}
    />
  </div>
</ConfigLayout>
`;
