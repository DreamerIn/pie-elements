// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`design snapshot renders all items except feedback 1`] = `
<ConfigLayout
  settings={
    <Panel
      groups={
        Object {
          "Item Type": Object {
            "highlightChoices": undefined,
          },
          "Properties": Object {
            "rationale.enabled": false,
            "scoringType": false,
            "studentInstructions.enabled": false,
            "teacherInstructions.enabled": false,
          },
        }
      }
      model={
        Object {
          "tokens": Array [],
        }
      }
      onChangeConfiguration={[Function]}
      onChangeModel={[Function]}
    />
  }
>
  <div>
    <Component
      label="Prompt"
    >
      <EditableHtml
        onChange={[Function]}
      />
    </Component>
    <TextField
      label="Content"
      multiline={true}
      onChange={[Function]}
      required={false}
      select={false}
      variant="standard"
    />
    <Component
      label="Tokens"
    >
      <WithStyles(Tokenizer)
        onChange={[Function]}
        tokens={Array []}
      />
    </Component>
    <WithStyles(Chip)
      label="Mode: None"
    />
    <WithStyles(Chip)
      label="Selections Available: 0"
    />
    <WithStyles(Chip)
      label="Correct Answers: 0"
    />
    <Component
      label="Selection count (0:any)"
      max={0}
      min={0}
      onChange={[Function]}
    />
    <Component
      label="Allow Partial Scoring"
      onChange={[Function]}
      title="Scoring"
    />
  </div>
</ConfigLayout>
`;

exports[`design snapshot renders all items except the content input 1`] = `
<ConfigLayout
  settings={
    <Panel
      groups={
        Object {
          "Item Type": Object {
            "highlightChoices": undefined,
          },
          "Properties": Object {
            "rationale.enabled": false,
            "scoringType": false,
            "studentInstructions.enabled": false,
            "teacherInstructions.enabled": false,
          },
        }
      }
      model={
        Object {
          "tokens": Array [],
        }
      }
      onChangeConfiguration={[Function]}
      onChangeModel={[Function]}
    />
  }
>
  <div>
    <Component
      label="Prompt"
    >
      <EditableHtml
        onChange={[Function]}
      />
    </Component>
    <Component
      label="Tokens"
    >
      <WithStyles(Tokenizer)
        onChange={[Function]}
        tokens={Array []}
      />
    </Component>
    <WithStyles(Chip)
      label="Mode: None"
    />
    <WithStyles(Chip)
      label="Selections Available: 0"
    />
    <WithStyles(Chip)
      label="Correct Answers: 0"
    />
    <Component
      label="Selection count (0:any)"
      max={0}
      min={0}
      onChange={[Function]}
    />
    <Component
      label="Allow Partial Scoring"
      onChange={[Function]}
      title="Scoring"
    />
  </div>
</ConfigLayout>
`;

exports[`design snapshot renders all items with defaultProps 1`] = `
<ConfigLayout
  settings={
    <Panel
      groups={
        Object {
          "Item Type": Object {
            "highlightChoices": undefined,
          },
          "Properties": Object {
            "rationale.enabled": false,
            "scoringType": false,
            "studentInstructions.enabled": false,
            "teacherInstructions.enabled": false,
          },
        }
      }
      model={
        Object {
          "tokens": Array [],
        }
      }
      onChangeConfiguration={[Function]}
      onChangeModel={[Function]}
    />
  }
>
  <div>
    <Component
      label="Prompt"
    >
      <EditableHtml
        onChange={[Function]}
      />
    </Component>
    <TextField
      label="Content"
      multiline={true}
      onChange={[Function]}
      required={false}
      select={false}
      variant="standard"
    />
    <Component
      label="Tokens"
    >
      <WithStyles(Tokenizer)
        onChange={[Function]}
        tokens={Array []}
      />
    </Component>
    <WithStyles(Chip)
      label="Mode: None"
    />
    <WithStyles(Chip)
      label="Selections Available: 0"
    />
    <WithStyles(Chip)
      label="Correct Answers: 0"
    />
    <Component
      label="Selection count (0:any)"
      max={0}
      min={0}
      onChange={[Function]}
    />
    <Component
      label="Allow Partial Scoring"
      onChange={[Function]}
      title="Scoring"
    />
    <Component
      onChange={[Function]}
    />
  </div>
</ConfigLayout>
`;
